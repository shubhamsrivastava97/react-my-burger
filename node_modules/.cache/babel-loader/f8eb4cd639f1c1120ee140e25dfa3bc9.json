{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Ora_Training\\\\ReactJS\\\\myburger\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component, Fragment } from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BuildControls/BuildControls';\nconst INGREDIENT_PRICES = {\n  salad: 30,\n  bacon: 60,\n  cheese: 20,\n  meat: 80\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 50\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      if (oldCount <= 0) return;\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n    };\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) disabledInfo[key] = disabledInfo[key] <= 0;\n\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BurgerControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        price: this.state.totalPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["D:/Ora_Training/ReactJS/myburger/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Fragment","Burger","BurgerControls","INGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrice","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","removeIngredientHandler","priceDeduction","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BurgerControls from '../../components/Burger/BuildControls/BuildControls';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 30,\r\n    bacon: 60,\r\n    cheese: 20,\r\n    meat: 80\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 50,\r\n        \r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        })\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0)\r\n            return ;\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        })\r\n    }\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for (let key in disabledInfo)\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        return (\r\n            <Fragment>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BurgerControls ingredientAdded={this.addIngredientHandler}\r\n                ingredientRemoved={this.removeIngredientHandler}\r\n                disabled={disabledInfo}\r\n                price={this.state.totalPrice} />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}