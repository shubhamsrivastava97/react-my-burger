{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Ora_Training\\\\ReactJS\\\\Projects\\\\myburger\\\\src\\\\containers\\\\Checkout\\\\ContactData\\\\ContactData.js\";\nimport React, { Component } from 'react';\nimport classes from './ContactData.module.css';\nimport Button from '../../../components/UI/Button/Button';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Street'\n          },\n          value: ''\n        },\n        zipCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Postal Code'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Country'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Email'\n          },\n          value: ''\n        },\n        delivery: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'fastest',\n              displayName: 'Fastest'\n            }, {\n              value: 'cheapest',\n              displayName: 'Cheapest'\n            }]\n          },\n          value: ''\n        }\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        totalPrice: this.props.totalPrice\n      };\n      axios.post('/orders.json', order).then(response => {\n        //alert('Order Successful!');\n        this.setState({\n          loading: false\n        });\n        this.props.history.push(\"/\");\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.inputChangeHandler = (event, formElementID) => {};\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [formElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n        elementType: formElement.config.elementType,\n        elementConfig: formElement.config.elementConfig,\n        value: formElement.config.value,\n        changed: event => this.inputChangeHandler(event, formElement.id)\n      }, formElement.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        btnType: \"Success\",\n        clicked: this.orderHandler,\n        children: \"ORDER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n\n    if (this.state.loading) form = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.ContactData,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enter your Contact Data: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["D:/Ora_Training/ReactJS/Projects/myburger/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","classes","Button","axios","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","zipCode","country","email","delivery","options","displayName","loading","orderHandler","event","preventDefault","setState","order","ingredients","props","totalPrice","post","then","response","history","push","catch","error","inputChangeHandler","formElementID","render","formElementsArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport classes from './ContactData.module.css';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from  '../../../components/UI/Input/Input';\r\n\r\nclass ContactData extends Component{\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: ''\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: ''\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Postal Code'\r\n                },\r\n                value: ''\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: ''\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Email'\r\n                },\r\n                value: ''\r\n            },\r\n            delivery: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayName: 'Fastest'},\r\n                        {value: 'cheapest', displayName: 'Cheapest'}]\r\n                },\r\n                value: ''\r\n            }\r\n        },\r\n        loading: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true});\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            totalPrice: this.props.totalPrice,\r\n        };\r\n        axios.post('/orders.json', order)\r\n            .then(response => {\r\n                //alert('Order Successful!');\r\n                this.setState({loading: false});\r\n                this.props.history.push(\"/\");\r\n            })\r\n            .catch(error => {\r\n                this.setState({loading: false});\r\n            });\r\n    }\r\n\r\n    inputChangeHandler = (event, formElementID) => {\r\n        \r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form= (\r\n            <form>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input key={formElement.id}\r\n                           elementType={formElement.config.elementType}\r\n                           elementConfig={formElement.config.elementConfig}\r\n                           value={formElement.config.value}\r\n                           changed={(event) => this.inputChangeHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n            </form>\r\n        );\r\n\r\n        if (this.state.loading)\r\n            form= <Spinner />\r\n\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data: </h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}