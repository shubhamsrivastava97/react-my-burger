{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Ora_Training\\\\ReactJS\\\\Projects\\\\myburger\\\\src\\\\hoc\\\\withErrorHandler\\\\withErrorHandler.js\";\nimport React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null\n      };\n\n      this.errorConfirmedHandler = () => {\n        this.setState({\n          error: null\n        });\n      };\n    }\n\n    componentWillMount() {\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n        this.setState({\n          error: error\n        });\n      });\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.error,\n          modalClosed: this.errorConfirmedHandler,\n          children: this.state.error ? this.state.error.message : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(WrappedComponent, { ...this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    }\n\n  }, _temp;\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["D:/Ora_Training/ReactJS/Projects/myburger/src/hoc/withErrorHandler/withErrorHandler.js"],"names":["React","Component","Modal","Aux","withErrorHandler","WrappedComponent","axios","state","error","errorConfirmedHandler","setState","componentWillMount","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","componentWillUnmount","eject","render","message","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,MAAMC,gBAAgB,GAAG,CAAEC,gBAAF,EAAoBC,KAApB,KAA+B;AAAA;;AACpD,iBAAO,cAAcL,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC3BM,KAD2B,GACnB;AACJC,QAAAA,KAAK,EAAE;AADH,OADmB;;AAAA,WAoB3BC,qBApB2B,GAoBH,MAAM;AAC1B,aAAKC,QAAL,CAAe;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAf;AACH,OAtB0B;AAAA;;AAK3BG,IAAAA,kBAAkB,GAAI;AAClB,WAAKC,cAAL,GAAsBN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCC,GAAG,IAAI;AACzD,aAAKN,QAAL,CAAe;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAf;AACA,eAAOQ,GAAP;AACH,OAHqB,CAAtB;AAIA,WAAKC,cAAL,GAAsBX,KAAK,CAACO,YAAN,CAAmBK,QAAnB,CAA4BH,GAA5B,CAAiCI,GAAG,IAAIA,GAAxC,EAA6CX,KAAK,IAAI;AACxE,aAAKE,QAAL,CAAe;AAAEF,UAAAA,KAAK,EAAEA;AAAT,SAAf;AACH,OAFqB,CAAtB;AAGH;;AAEDY,IAAAA,oBAAoB,GAAI;AACpBd,MAAAA,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BO,KAA3B,CAAkC,KAAKT,cAAvC;AACAN,MAAAA,KAAK,CAACO,YAAN,CAAmBK,QAAnB,CAA4BG,KAA5B,CAAmC,KAAKJ,cAAxC;AACH;;AAMDK,IAAAA,MAAM,GAAI;AACN,0BACI,QAAC,GAAD;AAAA,gCACI,QAAC,KAAD;AACI,UAAA,IAAI,EAAE,KAAKf,KAAL,CAAWC,KADrB;AAEI,UAAA,WAAW,EAAE,KAAKC,qBAFtB;AAAA,oBAGK,KAAKF,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,CAAiBe,OAApC,GAA8C;AAHnD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,gBAAD,OAAsB,KAAKC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH;;AAnC0B,GAA/B;AAqCH,CAtCD;;AAwCA,eAAepB,gBAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use( req => {\n                this.setState( { error: null } );\n                return req;\n            } );\n            this.resInterceptor = axios.interceptors.response.use( res => res, error => {\n                this.setState( { error: error } );\n            } );\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject( this.reqInterceptor );\n            axios.interceptors.response.eject( this.resInterceptor );\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState( { error: null } );\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;"]},"metadata":{},"sourceType":"module"}