{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Ora_Training\\\\ReactJS\\\\Projects\\\\myburger\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component, Fragment } from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nconst INGREDIENT_PRICES = {\n  salad: 30,\n  bacon: 60,\n  cheese: 20,\n  meat: 80\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 50,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => ingredients[igKey]).reduce((sum, el) => sum + el, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      if (oldCount <= 0) return;\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert(\"Your order is a success!\");\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        totalPrice: this.state.totalPrice,\n        customer: {\n          name: 'Shubham Srivastava',\n          address: {\n            street: 'Dhum Baba ki Gali',\n            zipCode: '277001',\n            country: 'India'\n          },\n          email: 'shubham@shubham.com'\n        },\n        delivery: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => {\n        alert('Order Successful!');\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) disabledInfo[key] = disabledInfo[key] <= 0;\n\n    let orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n      ingredients: this.state.ingredients,\n      price: this.state.totalPrice,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 28\n    }, this);\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 28\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BurgerControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        price: this.state.totalPrice,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["D:/Ora_Training/ReactJS/Projects/myburger/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Fragment","Burger","BurgerControls","Modal","OrderSummary","axios","Spinner","INGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","customer","name","address","street","zipCode","country","email","delivery","post","then","response","alert","catch","error","render","disabledInfo","key","orderSummary"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BurgerControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 30,\r\n    bacon: 60,\r\n    cheese: 20,\r\n    meat: 80\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 50,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => ingredients[igKey])\r\n            .reduce((sum,el) => sum+el,0);\r\n        this.setState({purchasable: sum>0});\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        })\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0)\r\n            return ;\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        })\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        //alert(\"Your order is a success!\");\r\n        this.setState({loading: true});\r\n        const order = {\r\n            ingredients: this.state.ingredients,\r\n            totalPrice: this.state.totalPrice,\r\n            customer: {\r\n                name: 'Shubham Srivastava',\r\n                address: {\r\n                    street: 'Dhum Baba ki Gali',\r\n                    zipCode: '277001',\r\n                    country: 'India'\r\n                },\r\n                email: 'shubham@shubham.com'\r\n            },\r\n            delivery: 'fastest'\r\n        };\r\n        axios.post('/orders.json', order)\r\n            .then(response => {\r\n                alert('Order Successful!');\r\n                this.setState({loading: false, purchasing: false});\r\n            })\r\n            .catch(error => {\r\n                this.setState({loading: false, purchasing: false});\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for (let key in disabledInfo)\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        let orderSummary = <OrderSummary\r\n            ingredients={this.state.ingredients}\r\n            price={this.state.totalPrice}\r\n            purchaseCancelled={this.purchaseCancelHandler}\r\n            purchaseContinued={this.purchaseContinueHandler}/>;\r\n        if (this.state.loading){\r\n            orderSummary = <Spinner />\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BurgerControls ingredientAdded={this.addIngredientHandler}\r\n                ingredientRemoved={this.removeIngredientHandler}\r\n                disabled={disabledInfo}\r\n                price={this.state.totalPrice}\r\n                purchasable={this.state.purchasable}\r\n                ordered={this.purchaseHandler} />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}