{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Ora_Training\\\\ReactJS\\\\Projects\\\\myburger\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component, Fragment } from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nconst INGREDIENT_PRICES = {\n  salad: 30,\n  bacon: 60,\n  cheese: 20,\n  meat: 80\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 50,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: null\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => ingredients[igKey]).reduce((sum, el) => sum + el, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      if (oldCount <= 0) return;\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert(\"Your order is a success!\");\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        console.log(i);\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + this.state.totalPrice);\n      const queryString = queryParams.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://react-my-burger-a7d4e-default-rtdb.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: error\n      });\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) disabledInfo[key] = disabledInfo[key] <= 0;\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients can't be loaded!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 78\n    }, this);\n\n    if (this.state.ingredients) {\n      burger = /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.state.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BurgerControls, {\n          ingredientAdded: this.addIngredientHandler,\n          ingredientRemoved: this.removeIngredientHandler,\n          disabled: disabledInfo,\n          price: this.state.totalPrice,\n          purchasable: this.state.purchasable,\n          ordered: this.purchaseHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 23\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 28\n      }, this);\n    }\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 28\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), burger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withErrorHandler(BurgerBuilder, axios);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/Ora_Training/ReactJS/Projects/myburger/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Fragment","Burger","BurgerControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","error","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","console","log","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentDidMount","get","then","response","data","catch","render","disabledInfo","key","orderSummary","burger"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,cAAP,MAA2B,qDAA3B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,YAAP,MAAyB,mDAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,EADe;AAEtBC,EAAAA,KAAK,EAAE,EAFe;AAGtBC,EAAAA,MAAM,EAAE,EAHc;AAItBC,EAAAA,IAAI,EAAE;AAJgB,CAA1B;;AAOA,MAAMC,aAAN,SAA4Bd,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCe,KADkC,GAC1B;AACJC,MAAAA,WAAW,EAAE,IADT;AAEJC,MAAAA,UAAU,EAAE,EAFR;AAGJC,MAAAA,WAAW,EAAE,KAHT;AAIJC,MAAAA,UAAU,EAAE,KAJR;AAKJC,MAAAA,OAAO,EAAE,KALL;AAMJC,MAAAA,KAAK,EAAE;AANH,KAD0B;;AAAA,SAoBlCC,mBApBkC,GAoBXN,WAAD,IAAiB;AACnC,YAAMO,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYT,WAAZ,EACPU,GADO,CACHC,KAAK,IAAIX,WAAW,CAACW,KAAD,CADjB,EAEPC,MAFO,CAEA,CAACL,GAAD,EAAKM,EAAL,KAAYN,GAAG,GAACM,EAFhB,EAEmB,CAFnB,CAAZ;AAGA,WAAKC,QAAL,CAAc;AAACZ,QAAAA,WAAW,EAAEK,GAAG,GAAC;AAAlB,OAAd;AACH,KAzBiC;;AAAA,SA2BlCQ,oBA3BkC,GA2BVC,IAAD,IAAU;AAC7B,YAAMC,QAAQ,GAAG,KAAKlB,KAAL,CAAWC,WAAX,CAAuBgB,IAAvB,CAAjB;AACA,YAAME,YAAY,GAAGD,QAAQ,GAAG,CAAhC;AACA,YAAME,kBAAkB,GAAG,EACvB,GAAG,KAAKpB,KAAL,CAAWC;AADS,OAA3B;AAGAmB,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,YAA3B;AACA,YAAME,aAAa,GAAG3B,iBAAiB,CAACuB,IAAD,CAAvC;AACA,YAAMK,QAAQ,GAAG,KAAKtB,KAAL,CAAWE,UAA5B;AACA,YAAMqB,QAAQ,GAAGD,QAAQ,GAAGD,aAA5B;AACA,WAAKN,QAAL,CAAc;AACVd,QAAAA,WAAW,EAAEmB,kBADH;AAEVlB,QAAAA,UAAU,EAAEqB;AAFF,OAAd;AAIA,WAAKhB,mBAAL,CAAyBa,kBAAzB;AACH,KA1CiC;;AAAA,SA4ClCI,uBA5CkC,GA4CPP,IAAD,IAAU;AAChC,YAAMC,QAAQ,GAAG,KAAKlB,KAAL,CAAWC,WAAX,CAAuBgB,IAAvB,CAAjB;AACA,UAAIC,QAAQ,IAAI,CAAhB,EACI;AACJ,YAAMC,YAAY,GAAGD,QAAQ,GAAG,CAAhC;AACA,YAAME,kBAAkB,GAAG,EACvB,GAAG,KAAKpB,KAAL,CAAWC;AADS,OAA3B;AAGAmB,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,YAA3B;AACA,YAAMM,cAAc,GAAG/B,iBAAiB,CAACuB,IAAD,CAAxC;AACA,YAAMK,QAAQ,GAAG,KAAKtB,KAAL,CAAWE,UAA5B;AACA,YAAMqB,QAAQ,GAAGD,QAAQ,GAAGG,cAA5B;AACA,WAAKV,QAAL,CAAc;AACVd,QAAAA,WAAW,EAAEmB,kBADH;AAEVlB,QAAAA,UAAU,EAAEqB;AAFF,OAAd;AAIA,WAAKhB,mBAAL,CAAyBa,kBAAzB;AACH,KA7DiC;;AAAA,SA+DlCM,eA/DkC,GA+DhB,MAAM;AACpB,WAAKX,QAAL,CAAc;AAACX,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH,KAjEiC;;AAAA,SAmElCuB,qBAnEkC,GAmEV,MAAM;AAC1B,WAAKZ,QAAL,CAAc;AAACX,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH,KArEiC;;AAAA,SAuElCwB,uBAvEkC,GAuER,MAAM;AAC5B;AACA,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,IAAIC,CAAT,IAAc,KAAK9B,KAAL,CAAWC,WAAzB,EAAqC;AACjC8B,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAD,QAAAA,WAAW,CAACI,IAAZ,CAAiBC,kBAAkB,CAACJ,CAAD,CAAlB,GAAsB,GAAtB,GAA0BI,kBAAkB,CAAC,KAAKlC,KAAL,CAAWC,WAAX,CAAuB6B,CAAvB,CAAD,CAA7D;AACH;;AACDD,MAAAA,WAAW,CAACI,IAAZ,CAAiB,WAAS,KAAKjC,KAAL,CAAWE,UAArC;AACA,YAAMiC,WAAW,GAAGN,WAAW,CAACO,IAAZ,CAAiB,GAAjB,CAApB;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBL,IAAnB,CAAwB;AACpBM,QAAAA,QAAQ,EAAE,WADU;AAEpBC,QAAAA,MAAM,EAAE,MAAIL;AAFQ,OAAxB;AAIH,KApFiC;AAAA;;AAUlCM,EAAAA,iBAAiB,GAAG;AAChBlD,IAAAA,KAAK,CAACmD,GAAN,CAAU,4EAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAK7B,QAAL,CAAc;AAACd,QAAAA,WAAW,EAAE2C,QAAQ,CAACC;AAAvB,OAAd;AACH,KAHL,EAIKC,KAJL,CAIWxC,KAAK,IAAI;AACZ,WAAKS,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACH,KANL;AAOH;;AAqEDyC,EAAAA,MAAM,GAAG;AACL,UAAMC,YAAY,GAAG,EACjB,GAAG,KAAKhD,KAAL,CAAWC;AADG,KAArB;;AAGA,SAAK,IAAIgD,GAAT,IAAgBD,YAAhB,EACIA,YAAY,CAACC,GAAD,CAAZ,GAAoBD,YAAY,CAACC,GAAD,CAAZ,IAAqB,CAAzC;;AAEJ,QAAIC,YAAY,GAAG,IAAnB;AAEA,QAAIC,MAAM,GAAG,KAAKnD,KAAL,CAAWM,KAAX,gBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlB,gBAAwD,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAArE;;AACA,QAAI,KAAKN,KAAL,CAAWC,WAAf,EAA2B;AACvBkD,MAAAA,MAAM,gBAAI,QAAC,QAAD;AAAA,gCACN,QAAC,MAAD;AAAQ,UAAA,WAAW,EAAE,KAAKnD,KAAL,CAAWC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADM,eAEN,QAAC,cAAD;AAAgB,UAAA,eAAe,EAAE,KAAKe,oBAAtC;AACgB,UAAA,iBAAiB,EAAE,KAAKQ,uBADxC;AAEgB,UAAA,QAAQ,EAAEwB,YAF1B;AAGgB,UAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWE,UAHlC;AAIgB,UAAA,WAAW,EAAE,KAAKF,KAAL,CAAWG,WAJxC;AAKgB,UAAA,OAAO,EAAE,KAAKuB;AAL9B;AAAA;AAAA;AAAA;AAAA,gBAFM;AAAA;AAAA;AAAA;AAAA;AAAA,cAAV;AASAwB,MAAAA,YAAY,gBAAG,QAAC,YAAD;AACX,QAAA,WAAW,EAAE,KAAKlD,KAAL,CAAWC,WADb;AAEX,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,UAFP;AAGX,QAAA,iBAAiB,EAAE,KAAKyB,qBAHb;AAIX,QAAA,iBAAiB,EAAE,KAAKC;AAJb;AAAA;AAAA;AAAA;AAAA,cAAf;AAKH;;AAED,QAAI,KAAK5B,KAAL,CAAWK,OAAf,EAAuB;AACnB6C,MAAAA,YAAY,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAf;AACH;;AACD,wBACI,QAAC,QAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKlD,KAAL,CAAWI,UAAxB;AAAoC,QAAA,WAAW,EAAE,KAAKuB,qBAAtD;AAAA,kBACKuB;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKC,MAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA7HiC;;AAgItC,oBAAe1D,gBAAgB,CAACM,aAAD,EAAgBR,KAAhB,CAA/B","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BurgerControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 30,\r\n    bacon: 60,\r\n    cheese: 20,\r\n    meat: 80\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 50,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false,\r\n        error: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://react-my-burger-a7d4e-default-rtdb.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                this.setState({ingredients: response.data});\r\n            })\r\n            .catch(error => {\r\n                this.setState({error: error});\r\n            });\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => ingredients[igKey])\r\n            .reduce((sum,el) => sum+el,0);\r\n        this.setState({purchasable: sum>0});\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        })\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0)\r\n            return ;\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        })\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        //alert(\"Your order is a success!\");\r\n        const queryParams = [];\r\n        for (let i in this.state.ingredients){\r\n            console.log(i);\r\n            queryParams.push(encodeURIComponent(i)+'='+encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price='+this.state.totalPrice);\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?'+queryString\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for (let key in disabledInfo)\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.state.error? <p>Ingredients can't be loaded!!</p>: <Spinner />;\r\n        if (this.state.ingredients){\r\n            burger = (<Fragment>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BurgerControls ingredientAdded={this.addIngredientHandler}\r\n                                ingredientRemoved={this.removeIngredientHandler}\r\n                                disabled={disabledInfo}\r\n                                price={this.state.totalPrice}\r\n                                purchasable={this.state.purchasable}\r\n                                ordered={this.purchaseHandler} />\r\n            </Fragment>);\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.state.ingredients}\r\n                price={this.state.totalPrice}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}/>;\r\n        }\r\n\r\n        if (this.state.loading){\r\n            orderSummary = <Spinner />\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);"]},"metadata":{},"sourceType":"module"}